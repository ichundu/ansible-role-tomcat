#!/bin/bash

# {{ ansible_managed }}
#
# tomcat
#
# chkconfig: - 80 20
#
### BEGIN INIT INFO
# Provides: tomcat
# Required-Start: $network $syslog
# Required-Stop: $network $syslog
# Default-Start:
# Default-Stop:
# Description: Tomcat 8
# Short-Description: start and stop tomcat
### END INIT INFO

## Source function library.
#. /etc/rc.d/init.d/functions

## Variables
export JAVA_HOME={{ tomcat_java_home }}
export JRE_HOME={{ tomcat_jre_home }}
export PATH=$JAVA_HOME/bin:$PATH
TOMCAT_HOME={{ tomcat_catalina_home }}
CATALINA_PID={{ tomcat_catalina_home }}/work/catalina.pid
CATALINA_HOME={{ tomcat_catalina_home }}
CATALINA_BASE={{ tomcat_catalina_home }}
tomcat_os_user={{ tomcat_os_user[0].name }}
SHUTDOWN_WAIT={{ tomcat_shutdown_wait | default('15') }}
prog=tomcat
prog=tomcat
# lockfile="/var/lock/subsys/${prog}"
# PIDFILE="/var/run/${prog}.pid"

tomcat_pid() {
  echo `ps aux | grep org.apache.catalina.startup.Bootstrap | grep -v grep | awk '{ print $2 }'`
}

start() {
  pid=$(tomcat_pid)
  if [ -n "$pid" ]
  then
    echo "Tomcat is already running (pid: $pid)"
  else
    # Start tomcat
    echo "Starting tomcat"
    ulimit -n 100000
    umask 007
    /bin/su -p -s /bin/sh $tomcat_os_user $TOMCAT_HOME/bin/startup.sh
  fi


  return 0
}

stop() {
  pid=$(tomcat_pid)
  if [ -n "$pid" ]
  then
    echo "Stoping Tomcat"
    /bin/su -p -s /bin/sh $tomcat_os_user $TOMCAT_HOME/bin/shutdown.sh {{ tomcat_shutdown_wait | default(omit) }}

    let kwait=$SHUTDOWN_WAIT
    count=0;
    until [ `ps -p $pid | grep -c $pid` = '0' ] || [ $count -gt $kwait ]
    do
      echo -n -e "\nwaiting for processes to exit";
      sleep 1
      let count=$count+1;
    done

    if [ $count -gt $kwait ]; then
      echo -n -e "\nkilling processes which didn't stop after $SHUTDOWN_WAIT seconds"
      kill -9 $pid
    fi
  else
    echo "Tomcat is not running"
  fi

  return 0
}

case $1 in
  start)
    start
  ;;
  stop)
    stop
  ;;
  restart)
    stop
    sleep $SHUTDOWN_WAIT
    start
  ;;
  status)
    pid=$(tomcat_pid)
    if [ -n "$pid" ]
    then
      echo "Tomcat is running with pid: $pid"
    else
      echo "Tomcat is not running"
    fi
  ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 2
esac
exit 0

# {{ ansible_managed }}
